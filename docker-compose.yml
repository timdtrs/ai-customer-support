version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

  backend:
    build: ./backend
    container_name: backend
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@postgres:5432/postgres
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_API_AUDIENCE=${AUTH0_API_AUDIENCE}
      - AUTH0_ISSUER=${AUTH0_ISSUER}
      - AUTH0_ALGORITHMS=${AUTH0_ALGORITHMS:-["RS256"]}
    depends_on:
      - qdrant
      - postgres
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/app/static:/app/static 
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "5173:5173"
    volumes:
        - ./frontend:/app:delegated
        # Use container-local node_modules to avoid host/arch mismatches
        - /app/node_modules
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://backend:8000
      - VITE_AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - VITE_AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - VITE_AUTH0_AUDIENCE=${AUTH0_API_AUDIENCE}

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5433"
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - default

volumes:
  qdrant_data:
  pgdata:
